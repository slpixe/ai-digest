name: Auto Version
on:
  workflow_dispatch:
    inputs:
      version-type:
        description: 'Version type (major/minor/patch)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: npm ci

      - name: Install global dependencies
        run: npm install -g tsx

      - name: Run tests
        run: npm test

  version:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Bump version
        run: |
          # Create version bump commit
          npm version ${{ github.event.inputs.version-type }} --no-git-tag-version --ignore-scripts
          NEW_VERSION=$(node -p "require('./package.json').version")
          
          # Sync JSR version
          node scripts/sync-version.js
          
          # Commit both package.json and jsr.json
          git add package.json package-lock.json jsr.json
          git commit -m "chore(release): v$NEW_VERSION"
          git tag v$NEW_VERSION
          
          git push
          git push --tags
          
          # Store version for publish job
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

  publish:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --ignore-scripts --access public

      - name: Publish to JSR
        run: npx jsr publish
