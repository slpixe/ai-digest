name: Auto Version
on:
  workflow_dispatch:
    inputs:
      version-type:
        description: 'Version type (major/minor/patch)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

# Ensure the workflow has permissions to write to the repository
permissions:
  contents: write
  statuses: write

jobs:
  test:
    name: test  # This matches the required status check name
    runs-on: ubuntu-latest
    # Give test job permissions to create statuses
    permissions:
      contents: read
      statuses: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: npm ci
      - name: Install global dependencies
        run: npm install -g tsx
      - name: Run tests
        run: npm test
      # Set commit status after tests
      - name: Set commit status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const state = '${{ job.status }}'.toLowerCase();
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: state === 'success' ? 'success' : 'failure',
              target_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              description: state === 'success' ? 'Tests passed' : 'Tests failed',
              context: 'test'
            });

  version:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Bump version
        id: version
        run: |
          # Create the version bump commit
          npm version ${{ github.event.inputs.version-type }} --no-git-tag-version --ignore-scripts
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          git add package.json package-lock.json
          git commit -m "chore(release): v$NEW_VERSION"
          git tag v$NEW_VERSION

      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push
          git push --tags
